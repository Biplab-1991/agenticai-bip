# multi-agent-shop/pizza_seller/agent.py
from google.adk.agents import Agent
from google.adk.tools import tool
from google.adk.invocation_context import InvocationContext

class PizzaSeller:
    def __init__(self):
        self.menu = {
            "pepperoni pizza": 15.00,
            "margherita pizza": 13.00,
            "vegetarian pizza": 14.00
        }

    @tool
    def get_pizza_menu(self, context: InvocationContext) -> str:
        """Retrieves the menu for pizzas.

        Args:
            context: The invocation context.
        """
        menu_items = [f"{item}: ${price:.2f}" for item, price in self.menu.items()]
        return "Our pizza menu:\n" + "\n".join(menu_items)

    @tool
    def place_pizza_order(self, item: str, quantity: int, context: InvocationContext) -> str:
        """Places an order for a specified pizza item and quantity.

        Args:
            item: The name of the pizza item.
            quantity: The number of items to order.
            context: The invocation context.
        """
        item_lower = item.lower()
        if item_lower in self.menu:
            cost = self.menu[item_lower] * quantity
            return f"Order placed for {quantity} {item}(s). Total: ${cost:.2f}. Enjoy your pizza!"
        else:
            return f"Sorry, '{item}' is not on our pizza menu."

# Instantiate the ADK Agent. Name should match the directory name.
agent = Agent(
    name="pizza_seller",
    model="gemini-1.5-flash",
    description="An agent that can provide pizza menus and take pizza orders.",
    instruction="You are a helpful pizza seller agent. Provide menu items and take orders.",
    tools=[
        PizzaSeller().get_pizza_menu,
        PizzaSeller().place_pizza_order
    ]
)
