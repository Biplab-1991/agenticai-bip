import boto3
import json

# ---------- Configuration ----------
KENDRA_INDEX_ID = "your-kendra-index-id"
CLAUDE_MODEL_ID = "anthropic.claude-v2"  # or v3 model if needed
AWS_REGION = "us-east-1"

# ---------- Clients ----------
bedrock = boto3.client("bedrock-runtime", region_name=AWS_REGION)
kendra = boto3.client("kendra", region_name=AWS_REGION)

# ---------- Function ----------
def query_kendra_and_claude(question):
    try:
        # Step 1: Query Kendra
        kendra_response = kendra.query(
            IndexId=KENDRA_INDEX_ID,
            QueryText=question,
            PageNumber=1
        )

        # Step 2: Extract top 3 passages
        passages = []
        for result in kendra_response.get("ResultItems", [])[:3]:
            text = result.get("DocumentExcerpt", {}).get("Text", "")
            if text:
                passages.append(text)

        context_text = "\n".join(passages)

        # Step 3: Build Claude prompt
        prompt = f"""
Human: Using the following context, answer the question concisely.

Context:
{context_text}

Question:
{question}

Assistant:
"""

        body = {
            "prompt": prompt,
            "max_tokens_to_sample": 500,
            "temperature": 0.5,
            "stop_sequences": ["\n\nHuman:"]
        }

        # Step 4: Invoke Claude
        response = bedrock.invoke_model(
            modelId=CLAUDE_MODEL_ID,
            body=json.dumps(body),
            contentType="application/json"
        )

        result = json.loads(response["body"].read())
        answer = result.get("completion", "").strip()

        return {
            "statusCode": 200,
            "answer": answer
        }

    except Exception as e:
        return {
            "statusCode": 500,
            "error": str(e)
        }

# ---------- Main ----------
if __name__ == "__main__":
    user_question = input("Ask a question: ")
    result = query_kendra_and_claude(user_question)

    print("\n=== Claude's Answer ===")
    if result["statusCode"] == 200:
        print(result["answer"])
    else:
        print(f"Error: {result['error']}")
