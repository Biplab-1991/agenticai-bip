# server.py
from fastapi import FastAPI
import asyncio
from main import input_intent_server
from pydantic import BaseModel
# Define the Pydantic model
class InputIntentBody(BaseModel):
    user_query: str  # Example: Expects a required string field named 'user_query'
    thread_id: str | None = None # Example: Expects an optional string field named 'thread_id'
    # ... add all other expected fields and their types

app = FastAPI(title="input_intent API")

@app.post("/input-intent")
def trigger_input_intent(body: InputIntentBody): # <-- Change this line
    print(f"body:: {body}") # Use f-string for better print
    try:
        result = asyncio.run(input_intent_server(body))
        # ... rest of your code
        return {
            "dialog": result.get("dialog", []),
            "status": result.get("status", "unknown"),
            "final_problem_statement": result.get("final_problem_statement",[]),
            "flow_type": result.get("flow_type", "non-guided"),
            "documentation": result.get("documentation", []),
            "next_question": result.get("next_question", ""),
            "thread_id": result.get("thread_id", "")
        }
    except Exception as e:
        return {
            "status": "error",
            "message": str(e)
        }
